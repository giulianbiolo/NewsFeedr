openapi: 3.0.0

info:
  version: '1.0'
  title: "NewsFeedr APIs"
  description: This application allows users to read 
    and manage RSS feeds from various sources. Users can save their favorite feeds
    for easy access and organize them for quick navigation. With its user-friendly
    interface, staying up-to-date with the latest news and updates is a breeze.
  license:
    name: MIT
    url: https://github.com/giulianbiolo/NewsFeedr
    
servers:
  - url: http://localhost:3000/api
    description: Local Server

paths:
  /auth/login:
    post:
      summary: Login the user with email and password
      requestBody:
        description: The user credentials
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
            example: 
              email: "email@email.com"
              password: "password"

      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessRequest'
            example:
              statusCode: 200
              statusMessage: ""

  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        description: the new user's credentials
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/RegisterCredentials"
            example:
              name: "Name"
              surname: "Surname"
              email: "email@email.com"
              password: "password"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessRequest'
            example:
              statusCode: 200
              statusMessage: ""
                
  /feeds:
    get:
      summary: List all the feeds from the DB
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feed'
              example:
                application/json:
                feeds:
                  - id: MongoDB_ID_String
                    title: A news article title
                    description: A news article description
                    link: ansa.it/this/is/the/link
                  - id: MongoDB_ID_String_2
                    title: A news article title new
                    description: A news article description new
                    link: ansa.it/this/is/the/link/new
              
  /feeds/{num}:
    get:
      summary: List the latest num feeds
      parameters:
        - name: num
          in: query
          description: Number of feeds to return
          required: true
          schema:
            type: integer
          example: 2
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feed'
              example:
                application/json:
                  feeds:
                    - id: MongoDB_ID_String
                      title: A news article title
                      description: A news article description
                      link: ansa.it/this/is/the/link
                    - id: MongoDB_ID_String_2
                      title: A news article title new
                      description: A news article description new
                      link: ansa.it/this/is/the/link/new
                      
  /feeds/magazine:
    get:
      summary: List all the magazines from the DB
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Magazine'
                example:
                  - id: MongoDB_ID_String
                    progr: 1
                    name: "USA Today"
                    url: "http://url.com"
              
  /feeds/magazine/{id}:
    get:
      summary: List all the feeds of a specific magazine where its ID = id
      parameters:
        - name: id
          in: query
          description: Progr ID of the magazine
          required: true
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feed'
              example:
                application/json:
                  feeds:
                    - id: MongoDB_ID_String
                      title: A news article title
                      description: A news article description
                      link: ansa.it/this/is/the/link
                    - id: MongoDB_ID_String_2
                      title: A news article title new
                      description: A news article description new
                      link: ansa.it/this/is/the/link/new

  /feeds/magazine/fetch:
    get:
      summary: List all the feeds from the DB after inducing a refresh of the RSS feeds
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/Feed"
              example:  
                application/json:
                  feeds:
                    - id: MongoDB_ID_String
                      title: A news article title
                      description: A news article description
                      link: ansa.it/this/is/the/link
                    - id: MongoDB_ID_String_2
                      title: A news article title new
                      description: A news article description new
                      link: ansa.it/this/is/the/link/new
                      
  /api/feeds/bookmarks:
    put:
      summary: Add a new bookmark for a user
      requestBody:
        description: Bookmark information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookmark'
            example:
              feedId: 1
              userId: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessRequest'
            example:
              statusCode: 200
              statusMessage: ""
    delete:
      summary: Delete an existing bookmark
      requestBody:
        description: Bookmark information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookmark'
            example:
              feedId: 1
              userId: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SuccessRequest'
            example:
              statusCode: 200
              statusMessage: ""

              
components:
  schemas: 
    LoginCredentials:
      type: object
      properties:
        email:
          type: string
        password: 
          type: string
    RegisterCredentials:
      type: object
      properties:
        name: 
          type: string
        surname:
          type: string
        email:
          type: string
        password: 
          type: string
    Feed:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        link:
          type: string
    Magazine:
      type: object
      properties:
        id:
          type: string
        progr:
          type: integer
        name:
          type: string
        url:
          type: string
    Bookmark:
      type: object
      properties:
        id: 
         type: string
        userId: 
          type: integer
        feedId:
          type: integer
    SuccessRequest:
      type: object
      properties:
        statusCode:
          type: integer
        statusMessage:
          type: string
        data:
          type: object
